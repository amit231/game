import React, { useState, useEffect, useContext } from "react";
import indexContext from '../../store/useIndexContext'
import Structure from '../../reusable/structure/structure'
import "./Lock.css";
import authContext from '../../store/useAuthContext'
import firebase from 'firebase/app'
import 'firebase/firestore'
function Lock(props) {


  let sts = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M916 1136C1049.35 1136 1166 1028.94 1166 886C1166 743.059 1049.35 636 916 636C782.654 636 666 743.059 666 886C666 1028.94 782.654 1136 916 1136Z"
            stroke="#DD0B0B"
            stroke-width="25"
          />
        </g>
        <path
          d="M913.999 1127C1048.21 1127 1157 1018.2 1157 883.999C1157 749.795 1048.21 641 913.999 641C779.794 641 671 749.795 671 883.999C671 1018.2 779.794 1127 913.999 1127Z"
          fill="white"
        />
        <path
          d="M1019.24 821.232C1016.07 776.428 971.167 781.004 971.167 781.004C952.214 743.563 922.604 770.68 922.604 770.68C899.856 733.991 871.342 767.991 871.342 767.991C822.163 762.05 824.069 807.097 824.069 807.097C822.915 821.419 831 865.718 831 865.718C823.705 840.185 807.884 861.383 807.884 861.383C788.427 895.016 803.069 913.428 803.069 913.428C829.396 947.995 885.488 989.486 885.488 989.486C905.803 1002.53 897.209 1014.15 897.209 1014.15L1020.07 991.408L1022.89 965.293C1041.57 902.009 1019.24 821.232 1019.24 821.232Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let st = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          style={{ display: "none" }}
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path
          style={{ display: "none" }}
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path
          style={{ display: "none" }}
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M916 1136C1049.35 1136 1166 1028.94 1166 886C1166 743.059 1049.35 636 916 636C782.654 636 666 743.059 666 886C666 1028.94 782.654 1136 916 1136Z"
            stroke="#DD0B0B"
            stroke-width="25"
          />
        </g>
        <path
          d="M913.999 1127C1048.21 1127 1157 1018.2 1157 883.999C1157 749.795 1048.21 641 913.999 641C779.794 641 671 749.795 671 883.999C671 1018.2 779.794 1127 913.999 1127Z"
          fill="white"
        />
        <path
          d="M1019.24 821.232C1016.07 776.428 971.167 781.004 971.167 781.004C952.214 743.563 922.604 770.68 922.604 770.68C899.856 733.991 871.342 767.991 871.342 767.991C822.163 762.05 824.069 807.097 824.069 807.097C822.915 821.419 831 865.718 831 865.718C823.705 840.185 807.884 861.383 807.884 861.383C788.427 895.016 803.069 913.428 803.069 913.428C829.396 947.995 885.488 989.486 885.488 989.486C905.803 1002.53 897.209 1014.15 897.209 1014.15L1020.07 991.408L1022.89 965.293C1041.57 902.009 1019.24 821.232 1019.24 821.232Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let pas = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g id="Frame 3">
          <g id="Frame 1">
            <g id="win bg">
              <path
                id="bottom"
                d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
                fill="#BCB5B5"
                fill-opacity="0.1"
              />
              <path
                id="mid"
                d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
                fill="#BCB5B5"
                fill-opacity="0.08"
              />
              <path
                id="top"
                d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
                fill="#C4C4C4"
                fill-opacity="0.08"
              />
            </g>
          </g>
          <g id="paper 3">
            <g id="paper 2">
              <g id="paper 1">
                <g id="separate 1 1">
                  <g id="paper">
                    <g id="paper-outline" filter="url(#filter0_i)">
                      <path
                        id="Vector"
                        d="M916 1136C1049.33 1136 1166 1028.94 1166 886C1166 743.059 1049.33 636 916 636C782.667 636 666 743.059 666 886C666 1028.94 782.667 1136 916 1136Z"
                        stroke="#280BDD"
                        stroke-width="25"
                      />
                    </g>
                    <path
                      id="paper-container"
                      d="M917.999 1129C1052.21 1129 1161 1020.21 1161 886C1161 751.796 1052.21 643 917.999 643C783.789 643 675 751.796 675 886C675 1020.21 783.789 1129 917.999 1129Z"
                      fill="white"
                    />
                    <path
                      id="paper-icon"
                      d="M1047.71 793.854C1045.42 793.059 1043.02 792.709 1040.57 792.831C1037.28 793.038 1034.6 794.232 1033.06 796.194C1023.75 807.824 1016.16 829.786 1009.99 847.441C1007.2 855.597 1003.4 866.52 1000.69 871.705C997.821 857.18 1001.04 803.98 1002.28 783.491L1002.32 783.16C1003.17 768.928 1003.29 766.428 1003.13 765.331C1001.74 757.525 998.248 752.399 992.705 750.106C987.124 747.777 979.837 748.811 972.047 753.016C968.094 755.14 967.008 762.412 963.675 795.39L963.636 795.538C961.815 813.655 957.512 855.378 952.278 862.327C946.35 852.606 938.209 797.374 934.683 773.466C932.24 756.723 930.807 747.108 929.837 744.205C927.782 738.122 919.218 732.95 910.768 732.66C903.713 732.349 897.898 735.554 895.146 741.135C889.953 746.282 891.813 763.34 897.512 803.748C900.226 822.984 905.846 862.703 902.317 867.164C895.264 866.475 883.171 841.592 866.35 793.18C861.62 779.626 860.185 775.55 858.713 773.764C855.846 767.545 846.154 762.748 837.435 763.295C836.697 763.34 836 763.423 835.264 763.545C830.73 764.354 820.303 768.106 822.551 785.412C828.675 809.403 835.341 827.014 841.813 844.113L841.931 844.453C845.807 854.698 849.488 864.374 852.898 875.108C860.884 900.462 857.783 916.189 857.744 916.369C857.474 917.984 856.931 918.971 856.077 919.32C855.73 919.457 855.342 919.534 854.953 919.55C852.396 919.705 848.598 918.205 846.62 917.223C842.124 909.554 819.799 873.016 799.565 867.95L798.829 867.757L798.093 867.82C790.65 868.446 785.226 870.953 781.854 875.273C776.581 882.106 778.791 890.806 779.295 892.554L779.606 893.176C779.76 893.441 796 919.899 798.518 932.205C800.689 942.761 811.892 954.194 820.923 963.383L821.272 963.761C824.217 966.761 826.736 969.365 828.752 971.768C854.915 996.155 896.27 1016.66 896.581 1016.84C901.774 1020.23 904.644 1023.53 904.953 1026.35C905.069 1027.42 904.76 1028.5 904.024 1029.35L903.094 1030.19L908.829 1035.16L1017.94 1028.31L1022.59 1009.25C1036.97 955.432 1033.98 909.543 1033.95 909.239C1033.98 907.55 1038.02 891.219 1041.27 878.025L1041.35 877.689C1047.82 851.408 1055.85 818.709 1057.39 806.277C1058.06 800.957 1054.26 796.077 1047.71 793.854Z"
                      fill="#3B4262"
                    />
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let pa = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g id="Frame 3">
          <g id="Frame 1">
            <g id="win bg">
              <path
                style={{ display: "none" }}
                id="bottom"
                d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
                fill="#BCB5B5"
                fill-opacity="0.1"
              />
              <path
                style={{ display: "none" }}
                id="mid"
                d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
                fill="#BCB5B5"
                fill-opacity="0.08"
              />
              <path
                style={{ display: "none" }}
                id="top"
                d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
                fill="#C4C4C4"
                fill-opacity="0.08"
              />
            </g>
          </g>
          <g id="paper 3">
            <g id="paper 2">
              <g id="paper 1">
                <g id="separate 1 1">
                  <g id="paper">
                    <g id="paper-outline" filter="url(#filter0_i)">
                      <path
                        id="Vector"
                        d="M916 1136C1049.33 1136 1166 1028.94 1166 886C1166 743.059 1049.33 636 916 636C782.667 636 666 743.059 666 886C666 1028.94 782.667 1136 916 1136Z"
                        stroke="#280BDD"
                        stroke-width="25"
                      />
                    </g>
                    <path
                      id="paper-container"
                      d="M917.999 1129C1052.21 1129 1161 1020.21 1161 886C1161 751.796 1052.21 643 917.999 643C783.789 643 675 751.796 675 886C675 1020.21 783.789 1129 917.999 1129Z"
                      fill="white"
                    />
                    <path
                      id="paper-icon"
                      d="M1047.71 793.854C1045.42 793.059 1043.02 792.709 1040.57 792.831C1037.28 793.038 1034.6 794.232 1033.06 796.194C1023.75 807.824 1016.16 829.786 1009.99 847.441C1007.2 855.597 1003.4 866.52 1000.69 871.705C997.821 857.18 1001.04 803.98 1002.28 783.491L1002.32 783.16C1003.17 768.928 1003.29 766.428 1003.13 765.331C1001.74 757.525 998.248 752.399 992.705 750.106C987.124 747.777 979.837 748.811 972.047 753.016C968.094 755.14 967.008 762.412 963.675 795.39L963.636 795.538C961.815 813.655 957.512 855.378 952.278 862.327C946.35 852.606 938.209 797.374 934.683 773.466C932.24 756.723 930.807 747.108 929.837 744.205C927.782 738.122 919.218 732.95 910.768 732.66C903.713 732.349 897.898 735.554 895.146 741.135C889.953 746.282 891.813 763.34 897.512 803.748C900.226 822.984 905.846 862.703 902.317 867.164C895.264 866.475 883.171 841.592 866.35 793.18C861.62 779.626 860.185 775.55 858.713 773.764C855.846 767.545 846.154 762.748 837.435 763.295C836.697 763.34 836 763.423 835.264 763.545C830.73 764.354 820.303 768.106 822.551 785.412C828.675 809.403 835.341 827.014 841.813 844.113L841.931 844.453C845.807 854.698 849.488 864.374 852.898 875.108C860.884 900.462 857.783 916.189 857.744 916.369C857.474 917.984 856.931 918.971 856.077 919.32C855.73 919.457 855.342 919.534 854.953 919.55C852.396 919.705 848.598 918.205 846.62 917.223C842.124 909.554 819.799 873.016 799.565 867.95L798.829 867.757L798.093 867.82C790.65 868.446 785.226 870.953 781.854 875.273C776.581 882.106 778.791 890.806 779.295 892.554L779.606 893.176C779.76 893.441 796 919.899 798.518 932.205C800.689 942.761 811.892 954.194 820.923 963.383L821.272 963.761C824.217 966.761 826.736 969.365 828.752 971.768C854.915 996.155 896.27 1016.66 896.581 1016.84C901.774 1020.23 904.644 1023.53 904.953 1026.35C905.069 1027.42 904.76 1028.5 904.024 1029.35L903.094 1030.19L908.829 1035.16L1017.94 1028.31L1022.59 1009.25C1036.97 955.432 1033.98 909.543 1033.95 909.239C1033.98 907.55 1038.02 891.219 1041.27 878.025L1041.35 877.689C1047.82 851.408 1055.85 818.709 1057.39 806.277C1058.06 800.957 1054.26 796.077 1047.71 793.854Z"
                      fill="#3B4262"
                    />
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );

    // jisme back wo h bina dispaluy none
    // style={{ display: 'none' }}



  let scs = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M916 1136C1049.35 1136 1166 1028.94 1166 886C1166 743.059 1049.35 636 916 636C782.654 636 666 743.059 666 886C666 1028.94 782.654 1136 916 1136Z"
            stroke="#DDA20B"
            stroke-width="25"
          />
        </g>
        <path
          d="M916.999 1129C1051.21 1129 1160 1020.21 1160 886C1160 751.796 1051.21 643 916.999 643C782.794 643 674 751.796 674 886C674 1020.21 782.794 1129 916.999 1129Z"
          fill="white"
        />
        <path
          d="M846.778 875.529L882.876 827.369C867.872 824.995 840.321 824.471 817.756 845.883C782.183 879.642 767.774 952.568 764.77 970.223L855.179 1056.02C871.457 1054.69 943.516 1045.56 1012.96 979.676C1013.69 978.252 1030.61 966.39 1016.77 953.268C1010.17 947.005 999.252 947.122 992.508 953.52C989.073 956.786 983.736 956.824 980.376 953.635C977.012 950.451 977.063 945.378 980.496 942.122L1005.03 918.836C1017.5 907.004 1005.75 887.043 988.341 891.84L968.26 908.155C964.589 911.189 959.132 910.669 956.12 907.354C953.004 903.937 953.671 898.752 957.217 895.836C1027.38 837.417 1017.14 844.446 1062.29 804.295C1079.15 790.966 1057.93 767.399 1041.31 780.887L932.102 874.088C928.927 876.651 924.059 876.703 920.935 873.971C917.325 871.014 917.244 866.748 919.602 863.387L995.774 751.009C1006.91 736.703 984.996 720.806 973.268 735.232L860.644 884.714C857.931 888.432 852.453 889.295 848.726 886.689C847.817 886.088 847.043 885.32 846.449 884.428C845.856 883.538 845.461 882.543 845.278 881.5C845.098 880.457 845.14 879.394 845.398 878.369C845.654 877.345 846.128 876.378 846.787 875.529H846.778Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let sc = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          style={{ display: "none" }}
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path
          style={{ display: "none" }}
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path
          style={{ display: "none" }}
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M916 1136C1049.35 1136 1166 1028.94 1166 886C1166 743.059 1049.35 636 916 636C782.654 636 666 743.059 666 886C666 1028.94 782.654 1136 916 1136Z"
            stroke="#DDA20B"
            stroke-width="25"
          />
        </g>
        <path
          d="M916.999 1129C1051.21 1129 1160 1020.21 1160 886C1160 751.796 1051.21 643 916.999 643C782.794 643 674 751.796 674 886C674 1020.21 782.794 1129 916.999 1129Z"
          fill="white"
        />
        <path
          d="M846.778 875.529L882.876 827.369C867.872 824.995 840.321 824.471 817.756 845.883C782.183 879.642 767.774 952.568 764.77 970.223L855.179 1056.02C871.457 1054.69 943.516 1045.56 1012.96 979.676C1013.69 978.252 1030.61 966.39 1016.77 953.268C1010.17 947.005 999.252 947.122 992.508 953.52C989.073 956.786 983.736 956.824 980.376 953.635C977.012 950.451 977.063 945.378 980.496 942.122L1005.03 918.836C1017.5 907.004 1005.75 887.043 988.341 891.84L968.26 908.155C964.589 911.189 959.132 910.669 956.12 907.354C953.004 903.937 953.671 898.752 957.217 895.836C1027.38 837.417 1017.14 844.446 1062.29 804.295C1079.15 790.966 1057.93 767.399 1041.31 780.887L932.102 874.088C928.927 876.651 924.059 876.703 920.935 873.971C917.325 871.014 917.244 866.748 919.602 863.387L995.774 751.009C1006.91 736.703 984.996 720.806 973.268 735.232L860.644 884.714C857.931 888.432 852.453 889.295 848.726 886.689C847.817 886.088 847.043 885.32 846.449 884.428C845.856 883.538 845.461 882.543 845.278 881.5C845.098 880.457 845.14 879.394 845.398 878.369C845.654 877.345 846.128 876.378 846.787 875.529H846.778Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let lis = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M900 1150C1033.33 1150 1150 1042.94 1150 900C1150 757.059 1033.33 650 900 650C766.667 650 650 757.059 650 900C650 1042.94 766.667 1150 900 1150Z"
            stroke="#DD0BAE"
            stroke-width="25"
          />
        </g>
        <path
          d="M899.999 1143C1034.21 1143 1143 1034.21 1143 900C1143 765.796 1034.21 657 899.999 657C765.789 657 657 765.796 657 900C657 1034.21 765.789 1143 899.999 1143Z"
          fill="white"
        />
        <path
          d="M975.931 768.164C989.534 758.743 1002.6 756.705 1012.71 762.423C1035.31 775.232 1032.06 822.908 1022.79 843.568C1017.56 855.232 1008.3 863.752 995.232 868.932C990.154 886.824 983.061 902.198 973.992 914.912C980 920.513 987.598 923.577 995.427 923.563H995.813L1008.57 909.52C1011.78 905.986 1016.98 905.984 1020.19 909.52C1023.41 913.05 1023.41 918.786 1020.19 922.32L1019.07 923.563H1021.63C1026.16 923.563 1029.85 927.617 1029.85 932.617C1029.85 937.613 1026.16 941.669 1021.63 941.669H1019.07L1020.19 942.912C1023.41 946.441 1023.41 952.176 1020.19 955.714C1018.57 957.48 1016.47 958.365 1014.38 958.365C1012.29 958.365 1010.15 957.48 1008.57 955.714L995.813 941.669H995.427C983.449 941.685 971.898 936.912 962.829 928.214C961.047 929.986 959.264 931.689 957.402 933.315C941.628 947.063 922.402 955.054 899.884 957.243C902.752 966.89 903.256 977.219 901.317 987.155L901.24 987.579L911.047 1004.82C912.248 1006.9 912.636 1009.42 912.171 1011.84C911.705 1014.25 910.427 1016.36 908.565 1017.72C907.248 1018.69 905.697 1019.2 904.11 1019.21C902.713 1019.2 901.358 1018.81 900.116 1018.06C898.915 1017.31 897.868 1016.23 897.132 1014.92L896.278 1013.39L895.697 1016.23C895.311 1018.31 894.303 1020.17 892.829 1021.5C891.358 1022.85 889.535 1023.58 887.636 1023.59C887.055 1023.59 886.435 1023.52 885.854 1023.37C883.721 1022.83 881.821 1021.35 880.659 1019.27C879.457 1017.19 879.069 1014.67 879.535 1012.27L880.077 1009.42L878.76 1010.4C877.829 1011.06 876.821 1011.51 875.736 1011.73C874.65 1011.95 873.565 1011.92 872.482 1011.66C871.435 1011.4 870.427 1010.91 869.534 1010.21C868.644 1009.51 867.868 1008.62 867.287 1007.59C866.124 1005.5 865.697 1002.98 866.163 1000.57C866.628 998.151 867.945 996.043 869.807 994.685L885.077 983.606L885.154 983.18C886.821 974.579 885.736 965.606 882.132 957.782C875.35 957.559 868.606 956.928 861.9 955.899C842.132 952.912 830.892 962.646 827.945 965.698C804.65 989.68 800.116 1032.05 800.077 1032.48C799.846 1034.76 798.876 1036.85 797.364 1038.38C795.854 1039.9 793.876 1040.75 791.821 1040.76C790.465 1040.76 789.108 1040.38 787.906 1039.67C786.705 1038.96 785.697 1037.93 784.923 1036.67C784.573 1036.06 775.813 1021.45 771.937 1000.82C766.744 972.797 772.945 947.101 789.961 926.495C800.039 914.327 812.752 905.227 826.86 900.054L825.116 900.554C820.658 898.234 815.815 897.034 810.892 897.038H810.504L797.713 911.083C796.124 912.791 794.03 913.739 791.86 913.734C789.768 913.734 787.636 912.849 786.047 911.083C785.27 910.248 784.65 909.252 784.264 908.155C783.837 907.054 783.604 905.874 783.604 904.68C783.604 903.486 783.837 902.306 784.264 901.205C784.65 900.108 785.27 899.113 786.047 898.277L787.171 897.038H784.573C780.039 897.038 776.356 892.986 776.356 887.986C776.356 882.984 780.039 878.937 784.573 878.937H787.171L786.047 877.694C785.27 876.858 784.65 875.86 784.264 874.766C783.837 873.664 783.604 872.484 783.604 871.291C783.604 870.092 783.837 868.912 784.264 867.815C784.65 866.714 785.27 865.718 786.047 864.883C789.264 861.354 794.457 861.354 797.713 864.883L810.504 878.928H810.892C817.713 878.917 824.496 880.462 830.774 883.48C837.093 886.495 842.752 890.921 847.441 896.475L846.512 895.423C854.069 894.588 861.628 894.739 869.108 895.874C890 899.029 907.094 895.791 920.27 886.209C912.829 875.946 908.799 863.142 908.799 849.953V849.516L896.201 834.986C894.691 833.205 893.837 830.831 893.837 828.365C893.837 825.899 894.691 823.529 896.201 821.743C896.939 820.878 897.829 820.189 898.837 819.718C899.807 819.248 900.892 819.004 901.939 819.004C903.022 819.004 904.11 819.248 905.077 819.718C906.085 820.189 906.978 820.878 907.713 821.743L908.837 823.029V820.106C908.837 814.932 912.48 810.739 916.939 810.739C921.435 810.739 925.077 814.932 925.077 820.106V823.025L926.201 821.743C926.939 820.878 927.829 820.189 928.837 819.718C929.807 819.248 930.892 819.004 931.978 819.004C933.022 819.004 934.11 819.248 935.077 819.718C936.085 820.189 936.978 820.878 937.713 821.743C942.559 827.315 939.069 833.437 937.713 834.986L925.077 849.516V849.946C925.077 858.791 927.791 867.243 932.559 873.953C938.526 866.013 943.217 856.02 946.589 844.004C944.108 836.354 940.272 818.232 950.116 797.685C955.234 786.923 965.154 775.613 975.931 768.164Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="637.5"
            y="633.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let li = (
    <>
      <svg
        className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          style={{ display: "none" }}
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path
          style={{ display: "none" }}
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path
          style={{ display: "none" }}
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M900 1150C1033.33 1150 1150 1042.94 1150 900C1150 757.059 1033.33 650 900 650C766.667 650 650 757.059 650 900C650 1042.94 766.667 1150 900 1150Z"
            stroke="#DD0BAE"
            stroke-width="25"
          />
        </g>
        <path
          d="M899.999 1143C1034.21 1143 1143 1034.21 1143 900C1143 765.796 1034.21 657 899.999 657C765.789 657 657 765.796 657 900C657 1034.21 765.789 1143 899.999 1143Z"
          fill="white"
        />
        <path
          d="M975.931 768.164C989.534 758.743 1002.6 756.705 1012.71 762.423C1035.31 775.232 1032.06 822.908 1022.79 843.568C1017.56 855.232 1008.3 863.752 995.232 868.932C990.154 886.824 983.061 902.198 973.992 914.912C980 920.513 987.598 923.577 995.427 923.563H995.813L1008.57 909.52C1011.78 905.986 1016.98 905.984 1020.19 909.52C1023.41 913.05 1023.41 918.786 1020.19 922.32L1019.07 923.563H1021.63C1026.16 923.563 1029.85 927.617 1029.85 932.617C1029.85 937.613 1026.16 941.669 1021.63 941.669H1019.07L1020.19 942.912C1023.41 946.441 1023.41 952.176 1020.19 955.714C1018.57 957.48 1016.47 958.365 1014.38 958.365C1012.29 958.365 1010.15 957.48 1008.57 955.714L995.813 941.669H995.427C983.449 941.685 971.898 936.912 962.829 928.214C961.047 929.986 959.264 931.689 957.402 933.315C941.628 947.063 922.402 955.054 899.884 957.243C902.752 966.89 903.256 977.219 901.317 987.155L901.24 987.579L911.047 1004.82C912.248 1006.9 912.636 1009.42 912.171 1011.84C911.705 1014.25 910.427 1016.36 908.565 1017.72C907.248 1018.69 905.697 1019.2 904.11 1019.21C902.713 1019.2 901.358 1018.81 900.116 1018.06C898.915 1017.31 897.868 1016.23 897.132 1014.92L896.278 1013.39L895.697 1016.23C895.311 1018.31 894.303 1020.17 892.829 1021.5C891.358 1022.85 889.535 1023.58 887.636 1023.59C887.055 1023.59 886.435 1023.52 885.854 1023.37C883.721 1022.83 881.821 1021.35 880.659 1019.27C879.457 1017.19 879.069 1014.67 879.535 1012.27L880.077 1009.42L878.76 1010.4C877.829 1011.06 876.821 1011.51 875.736 1011.73C874.65 1011.95 873.565 1011.92 872.482 1011.66C871.435 1011.4 870.427 1010.91 869.534 1010.21C868.644 1009.51 867.868 1008.62 867.287 1007.59C866.124 1005.5 865.697 1002.98 866.163 1000.57C866.628 998.151 867.945 996.043 869.807 994.685L885.077 983.606L885.154 983.18C886.821 974.579 885.736 965.606 882.132 957.782C875.35 957.559 868.606 956.928 861.9 955.899C842.132 952.912 830.892 962.646 827.945 965.698C804.65 989.68 800.116 1032.05 800.077 1032.48C799.846 1034.76 798.876 1036.85 797.364 1038.38C795.854 1039.9 793.876 1040.75 791.821 1040.76C790.465 1040.76 789.108 1040.38 787.906 1039.67C786.705 1038.96 785.697 1037.93 784.923 1036.67C784.573 1036.06 775.813 1021.45 771.937 1000.82C766.744 972.797 772.945 947.101 789.961 926.495C800.039 914.327 812.752 905.227 826.86 900.054L825.116 900.554C820.658 898.234 815.815 897.034 810.892 897.038H810.504L797.713 911.083C796.124 912.791 794.03 913.739 791.86 913.734C789.768 913.734 787.636 912.849 786.047 911.083C785.27 910.248 784.65 909.252 784.264 908.155C783.837 907.054 783.604 905.874 783.604 904.68C783.604 903.486 783.837 902.306 784.264 901.205C784.65 900.108 785.27 899.113 786.047 898.277L787.171 897.038H784.573C780.039 897.038 776.356 892.986 776.356 887.986C776.356 882.984 780.039 878.937 784.573 878.937H787.171L786.047 877.694C785.27 876.858 784.65 875.86 784.264 874.766C783.837 873.664 783.604 872.484 783.604 871.291C783.604 870.092 783.837 868.912 784.264 867.815C784.65 866.714 785.27 865.718 786.047 864.883C789.264 861.354 794.457 861.354 797.713 864.883L810.504 878.928H810.892C817.713 878.917 824.496 880.462 830.774 883.48C837.093 886.495 842.752 890.921 847.441 896.475L846.512 895.423C854.069 894.588 861.628 894.739 869.108 895.874C890 899.029 907.094 895.791 920.27 886.209C912.829 875.946 908.799 863.142 908.799 849.953V849.516L896.201 834.986C894.691 833.205 893.837 830.831 893.837 828.365C893.837 825.899 894.691 823.529 896.201 821.743C896.939 820.878 897.829 820.189 898.837 819.718C899.807 819.248 900.892 819.004 901.939 819.004C903.022 819.004 904.11 819.248 905.077 819.718C906.085 820.189 906.978 820.878 907.713 821.743L908.837 823.029V820.106C908.837 814.932 912.48 810.739 916.939 810.739C921.435 810.739 925.077 814.932 925.077 820.106V823.025L926.201 821.743C926.939 820.878 927.829 820.189 928.837 819.718C929.807 819.248 930.892 819.004 931.978 819.004C933.022 819.004 934.11 819.248 935.077 819.718C936.085 820.189 936.978 820.878 937.713 821.743C942.559 827.315 939.069 833.437 937.713 834.986L925.077 849.516V849.946C925.077 858.791 927.791 867.243 932.559 873.953C938.526 866.013 943.217 856.02 946.589 844.004C944.108 836.354 940.272 818.232 950.116 797.685C955.234 786.923 965.154 775.613 975.931 768.164Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="637.5"
            y="633.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let sps = (
    <>
      <svg className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M916 1136C1049.35 1136 1166 1028.94 1166 886C1166 743.059 1049.35 636 916 636C782.654 636 666 743.059 666 886C666 1028.94 782.654 1136 916 1136Z"
            stroke="#1D8BC8"
            stroke-width="25"
          />
        </g>
        <path
          d="M915.999 1129C1050.21 1129 1159 1020.21 1159 886C1159 751.796 1050.21 643 915.999 643C781.794 643 673 751.796 673 886C673 1020.21 781.794 1129 915.999 1129Z"
          fill="white"
        />
        <path
          d="M1039.92 900.655L1034.97 896.135C1023.15 885.331 1003.82 882.986 989.392 890.559L958.565 906.646L964.988 777.791C964.988 766.991 955.368 758.198 943.526 758.198C940.97 758.198 938.508 758.613 936.228 759.365L936.996 752.45C936.996 741.525 927.222 732.64 915.222 732.64C904.12 732.64 894.813 740.239 893.64 749.986L873.856 859.11C873.602 860.592 870.783 860.441 870.484 859.504L847.12 772.02C845.85 768.043 843.205 764.543 839.585 762.05C835.969 759.559 831.565 758.205 827.043 758.198C820.632 758.198 814.675 760.831 810.687 765.428C808.726 767.671 807.35 770.297 806.663 773.106C805.978 775.917 806 778.829 806.73 781.626L811.268 799.243C808.679 799.059 806.073 799.358 803.616 800.126C799.154 801.475 795.36 804.234 792.915 807.917C790.474 811.592 789.539 815.95 790.278 820.205L804.026 892.392C804.026 920.865 809.492 941.946 814.085 954.601C816.705 961.883 818.034 969.5 818.022 977.169C818.022 983.921 816.996 990.642 814.961 997.131L804.299 1031.22C803.701 1033.15 804.124 1035.22 805.435 1036.82C806.764 1038.42 808.825 1039.36 811.022 1039.36H936.988C938.097 1039.36 939.189 1039.13 940.175 1038.66C941.163 1038.21 942.016 1037.54 942.663 1036.71C943.313 1035.89 943.74 1034.94 943.911 1033.94C944.081 1032.94 943.988 1031.91 943.64 1030.95C943.565 1030.79 937.717 1014.28 943.256 991.836C950.278 986.631 974.872 968.369 983.701 961.009C998.299 948.831 1038.29 911.219 1039.99 909.617C1041.27 908.417 1041.98 906.802 1041.97 905.122C1041.96 903.441 1041.22 901.836 1039.92 900.651V900.655Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let sp = (
    <>
      <svg className="svgClass"
        viewBox="0 0 1800 1800"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path style={{ display: 'none' }}
          d="M1800 900C1800 1397.06 1397.06 1800 900 1800C402.944 1800 0 1397.06 0 900C0 402.944 402.944 0 900 0C1397.06 0 1800 402.944 1800 900Z"
          fill="#BCB5B5"
          fill-opacity="0.1"
        />
        <path style={{ display: 'none' }}
          d="M1596 900C1596 1286.6 1282.6 1600 896 1600C509.401 1600 196 1286.6 196 900C196 513.401 509.401 200 896 200C1282.6 200 1596 513.401 1596 900Z"
          fill="#BCB5B5"
          fill-opacity="0.08"
        />
        <path style={{ display: 'none' }}
          d="M896 1400C1172.14 1400 1396 1176.14 1396 900C1396 623.858 1172.14 400 896 400C619.858 400 396 623.858 396 900C396 1176.14 619.858 1400 896 1400Z"
          fill="#C4C4C4"
          fill-opacity="0.08"
        />
        <g filter="url(#filter0_i)">
          <path
            d="M916 1136C1049.35 1136 1166 1028.94 1166 886C1166 743.059 1049.35 636 916 636C782.654 636 666 743.059 666 886C666 1028.94 782.654 1136 916 1136Z"
            stroke="#1D8BC8"
            stroke-width="25"
          />
        </g>
        <path
          d="M915.999 1129C1050.21 1129 1159 1020.21 1159 886C1159 751.796 1050.21 643 915.999 643C781.794 643 673 751.796 673 886C673 1020.21 781.794 1129 915.999 1129Z"
          fill="white"
        />
        <path
          d="M1039.92 900.655L1034.97 896.135C1023.15 885.331 1003.82 882.986 989.392 890.559L958.565 906.646L964.988 777.791C964.988 766.991 955.368 758.198 943.526 758.198C940.97 758.198 938.508 758.613 936.228 759.365L936.996 752.45C936.996 741.525 927.222 732.64 915.222 732.64C904.12 732.64 894.813 740.239 893.64 749.986L873.856 859.11C873.602 860.592 870.783 860.441 870.484 859.504L847.12 772.02C845.85 768.043 843.205 764.543 839.585 762.05C835.969 759.559 831.565 758.205 827.043 758.198C820.632 758.198 814.675 760.831 810.687 765.428C808.726 767.671 807.35 770.297 806.663 773.106C805.978 775.917 806 778.829 806.73 781.626L811.268 799.243C808.679 799.059 806.073 799.358 803.616 800.126C799.154 801.475 795.36 804.234 792.915 807.917C790.474 811.592 789.539 815.95 790.278 820.205L804.026 892.392C804.026 920.865 809.492 941.946 814.085 954.601C816.705 961.883 818.034 969.5 818.022 977.169C818.022 983.921 816.996 990.642 814.961 997.131L804.299 1031.22C803.701 1033.15 804.124 1035.22 805.435 1036.82C806.764 1038.42 808.825 1039.36 811.022 1039.36H936.988C938.097 1039.36 939.189 1039.13 940.175 1038.66C941.163 1038.21 942.016 1037.54 942.663 1036.71C943.313 1035.89 943.74 1034.94 943.911 1033.94C944.081 1032.94 943.988 1031.91 943.64 1030.95C943.565 1030.79 937.717 1014.28 943.256 991.836C950.278 986.631 974.872 968.369 983.701 961.009C998.299 948.831 1038.29 911.219 1039.99 909.617C1041.27 908.417 1041.98 906.802 1041.97 905.122C1041.96 903.441 1041.22 901.836 1039.92 900.651V900.655Z"
          fill="#3B4262"
        />
        <defs>
          <filter
            id="filter0_i"
            x="653.5"
            y="619.5"
            width="525"
            height="529"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="BackgroundImageFix"
              result="shape"
            />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="-10" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
          </filter>
        </defs>
      </svg>
    </>
  );
  let iContext=useContext(indexContext)
  let currContext=useContext(authContext)
  let [passedIndex, setPass] = useState(iContext.passedIndex);
  let [result,setResult] = useState(null);
  let [resultDivClass, setResultClass] = useState("hide");
  let [shuffleDivClass, setShuffleClass] = useState("shuffleDiv");
  let [selectedDivClass, setSelectedClass] = useState("selectedDiv");
  let [imageClass, setImageClass] = useState("imgs");
  let [images,setImages]=useState([st,pa,sc,li,sp])
  let [arr,setArr] = useState([st,pa,sc,li,sp]);
  let [arrs,setArrs] = useState([sts,pas,scs,lis,sps]);
  let [opponentIndex,stt]=useState(Math.floor(Math.random() * 5));
  let [left, setleft] = useState(arr[iContext.passedIndex]);
  let [right, setright] = useState(arr[opponentIndex]); 
  let [isShuffleCompleted, setIsShuffleCompleted] = useState(false);
  let colref=firebase.firestore().collection('Users')
  useEffect(() => {
    let i = 0;
    let j = 0;
    let intervalObj = setInterval(() => {
     if (j >= 3000) {
       setright(arr[opponentIndex]);
       setIsShuffleCompleted(true);
       clearInterval(intervalObj);
     } else {
       let p = i;
       if (i === 4) {
         i = 0;
         setright(right=>images[p]);
       } else {
         i++;
         j += 500;
         setright(right=>images[p]);
       }
    }
     }, 100);
   }, []);
  useEffect(() => {
    if(isShuffleCompleted===true){  
    if (passedIndex === 0) {
        //stone
        if (opponentIndex === 3 || opponentIndex === 2) {
          setResult("YOU WIN");
          setleft(arrs[passedIndex]);
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          currContext.authDispatch({ type: "set-score",payload:currContext.authState.score+1 });
          colref.doc(currContext.authState.user.uid).update({ score: currContext.authState.score + 1 });
        }
        else if (opponentIndex === 0) {
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          setResult("DRAW");
        }
        else {
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          setright(arrs[opponentIndex])
          setResult('YOU LOSE')
        }
      } 
      else if (passedIndex === 1) {
        if (opponentIndex === 0 || opponentIndex === 4) {
          setResult("YOU WIN");
          setleft(arrs[passedIndex]);

          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          currContext.authDispatch({
            type: "set-score",
            payload: currContext.authState.score + 1,
          });
           colref
             .doc(currContext.authState.user.uid)
             .update({ score: currContext.authState.score + 1 });
        }
        else if (opponentIndex === 1) {
          setResult("DRAW");
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
        }
        else {
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          setright(arrs[opponentIndex])
          setResult('YOU LOSE')
        }
      }
       else if (passedIndex === 2) {
        if (opponentIndex === 1 || opponentIndex === 3) {
          setResult("YOU WIN");
          setleft(arrs[passedIndex]);
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          currContext.authDispatch({
            type: "set-score",
            payload: currContext.authState.score + 1,
          });
           colref
             .doc(currContext.authState.user.uid)
             .update({ score: currContext.authState.score + 1 });
        }
        else if (opponentIndex === 2) {
          setResult("DRAW");  

          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
        }
        else {
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          setright(arrs[opponentIndex])
          setResult("YOU LOSE");
        }
      } else if (passedIndex === 3) {
        if (opponentIndex === 1 || opponentIndex === 4) {
          setResult("YOU WIN");
          setleft(arrs[passedIndex]);

          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          currContext.authDispatch({
            type: "set-score",
            payload: currContext.authState.score + 1,
          });
           colref
             .doc(currContext.authState.user.uid)
             .update({ score: currContext.authState.score + 1 });
        }
        else if (opponentIndex === 3) {
          setResult("DRAW");

          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
        }
        else {
          
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          setright(arrs[opponentIndex])
          setResult("YOU LOSE");
        }
      }
       else if (passedIndex === 4) {
        if (opponentIndex === 0 || opponentIndex === 2) {
          setResult("YOU WIN");
          setleft(arrs[passedIndex]);
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          currContext.authDispatch({
            type: "set-score",
            payload: currContext.authState.score + 1,
          });
           colref
             .doc(currContext.authState.user.uid)
             .update({ score: currContext.authState.score + 1 });
        
        }
        else if (opponentIndex === 4) {
        
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          setResult("DRAW")
        }
        else {
          setShuffleClass("shuffleDiv animateShuffle aura");
          setSelectedClass("selectedDiv animateSelected");
          setright(arrs[opponentIndex])
          setResult("YOU LOSE");
        }
      }
    }  // console.log(result,imagesStr[passedIndex],imagesStr[opponentIndex],imagesStr[passedIndex+5],imagesStr[opponentIndex+5]);
      //result calc bhai ruk pehle call par aenge fir test kareng okokphoen steart ho raha hai tab tak dekh le ek baar fir logic
  }, [isShuffleCompleted]);

  useEffect(() => {
    if(result)
    setResultClass("resultDiv"); //abbe yeh woh hai to show result and play again button hmm kar call
  }, [result]);

  // useEffect(() => {
  //   setResultClass("resultDiv");
  //   setImageClass("imgs shiftImg");
  //   console.log(result);

  // }, [result]);







  const logout=()=>{
    props.history.push('/');
    props.logoutHandler();
  }






  return (
    <div className="back">
      <Structure logoutHandler={logout}showScore>
        <div className="grid">
          <div className={selectedDivClass}>
            <span className="youText">YOU PICKED</span>
            {left}
          </div>
          <div className={shuffleDivClass}>
            <span className="opponentText">COMPUTER PICKED</span>
            {right}
          </div>

          <div className={resultDivClass}>
            <span className="outcome">{result}</span>
            <button onClick={(e)=>{setResultClass('hide');props.history.push('/app')}} className="playAgainBtn">PLAY AGAIN</button>
          </div>
        </div>
      </Structure>
    </div>
  );
}
export default Lock;
